{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Django Namespaces","text":"<p>A collection-oriented object permission model for Django.</p> <p>Namespaces fills the niche when you want to grant groups or users privileges to collections of objects, rather than being concerned about permissions for each individual object.</p>"},{"location":"#what-is-a-namespace","title":"What is a namespace?","text":"<ul> <li>A namespace contains a collection of objects.</li> <li>Every object belongs to one and only one namespace.</li> <li>Users and/or groups may be granted permissions to namespace.</li> <li>Permissions to create into, read, update, and delete objects within a namespace are delegated to users and/or groups.</li> <li>A users permissions to a namespace are the set of permissons granted to the user directly, as well as the permissions granted to groups the user is a member of.</li> <li>There is a clear distinction between permissions to the namespace itself and the objects within, allowing for a clear distinction between administration of the namespace and administration of the objects within.</li> <li>A specific permission (delegate) can be granted to a user or group to a namespace, they can then grant object permissions to other users and groups.</li> </ul>"},{"location":"api/","title":"Working with namespaces","text":"<p>Assuming you have installed the namespaces endpoints to the <code>/namespaces/</code> path, you can now work with namespaces as follows. Note that all these views require authentication, but the examples ignore this for brevity.</p> <p>Note</p> <p>For all operations where you would use the id of the namespace, you can also use the name of the namespace.</p>"},{"location":"api/#endpoints-for-namespaces-themselves","title":"Endpoints for namespaces themselves","text":"<p>These endpoints are named <code>namespace-list-list</code> (for the list view) and <code>namespace-list-detail</code> (for the detail view).</p>"},{"location":"api/#list-namespaces-list-view","title":"List namespaces (list view)","text":"<pre><code>curl http://localhost:8000/namespaces/\n</code></pre>"},{"location":"api/#create-a-namespace-detail-view","title":"Create a namespace (detail view)","text":"<pre><code>curl -X POST -H \"Content-Type: application/json\" -d '{\"name\": \"test\", \"description\": \"A test namespace\"}' http://localhost:8000/namespaces/\n</code></pre>"},{"location":"api/#read-a-namespace-detail-view","title":"Read a namespace (detail view)","text":"<pre><code>curl http://localhost:8000/namespaces/1/\n</code></pre> <p>This will also show all user and groups that have permissions to the namespace, as well as their permission settings. Note that this will not expand users from groups, so users listed here are only those that have been granted permissions directly to the namespace. A user may be a member of a group and thus have permissions to the namespace, but will not be listed here.</p>"},{"location":"api/#update-a-namespace-detail-view","title":"Update a namespace (detail view)","text":"<pre><code>curl -X PATCH -H \"Content-Type: application/json\" -d '{\"description\": \"A test namespace, updated\"}' http://localhost:8000/namespaces/1/\n</code></pre>"},{"location":"api/#delete-a-namespace-detail-view","title":"Delete a namespace (detail view)","text":"<pre><code>curl -X DELETE http://localhost:8000/namespaces/1/\n</code></pre>"},{"location":"api/#working-with-permissions","title":"Working with permissions","text":"<p>The permissions to namespaces or their objects are manipulated through the following endpoint: <code>/&lt;namespaceid&gt;/(namespace|objects)/(user|group)/&lt;user_or_groupid&gt;</code>.</p>"},{"location":"api/#granting-permissions-to-namespaces","title":"Granting permissions to namespaces","text":"<p>This endpoint is named <code>namespace-grant-grant-permission</code>.</p> <p>A few examples:</p> <pre><code>curl -X POST http://localhost:8000/namespaces/1/namespace/user/1/ -d '{\"has_read\": true}'\n</code></pre> <p>This grants the user with id 1 read permissions to the namespace with id 1. This will allow only this user to read the namespace itself, but not the objects within.</p> <pre><code>curl -X POST http://localhost:8000/namespaces/1/objects/group/1/ -d '{\"has_read\": true}'\n</code></pre> <p>This grants the group with id 1 read permissions to the objects within the namespace with id 1. Anyone in the group with id 1 will be able to read the objects within the namespace with id 1, but not the namespace itself.</p> <p>The permissions available to be granted are:</p>"},{"location":"api/#for-the-namespaces-themselves","title":"For the namespaces themselves","text":"<ul> <li><code>has_read</code>: Allows a user to see the user and groups and their permissions to the namespace, as well as its name and description.</li> <li><code>has_update</code>: Allows a user to change the name and description of the namespace.</li> <li><code>has_delegate</code>: Allows a to delegate permissions to the namespace.</li> <li><code>has_delete</code>: Allows a user to delete the namespace.</li> </ul> <p>Warning</p> <p>Deleting a namespace also deletes all objects within the namespace.</p>"},{"location":"api/#for-the-objects-within-the-namespace","title":"For the objects within the namespace","text":"<ul> <li><code>has_create</code>: Allows a user to create objects within the namespace.</li> <li><code>has_read</code>: Allows a user to read objects within the namespace.</li> <li><code>has_update</code>: Allows a user to update existing objects within the namespace.</li> <li><code>has_delete</code>: Allows a user to delete objects within the namespace.</li> </ul> <p>Note that for <code>has_update</code> and <code>has_delete</code>, the requestor also needs <code>has_read</code> to the object or namespace they want to manipulate. Often, these permissions are provided by different groups, so one user may be a member of two  groups, one that grants <code>has_read</code> to the namespace, and another group that grants <code>has_update</code> to the namespace. These permissions then combine to allow the user to update the object, while allowing members of the <code>has_read</code> group to only read the object or namespace without being able to manipulate it.</p>"},{"location":"api/#revoking-all-permissions-to-namespace","title":"Revoking all permissions to namespace","text":"<p>This endpoint is named <code>namespace-grant-revoke-permission</code>.</p> <pre><code>curl -X DELETE http://localhost:8000/namespaces/1/namespace/user/1/\n</code></pre> <p>This revokes the user with id 1 all permissions from the namespace with id 1. Note that this does not revoke permissions from groups the user is a member of, nor does it remove permissions to the objects within the namespace.</p> <pre><code>curl -X DELETE http://localhost:8000/namespaces/1/objects/user/1/\n</code></pre>"},{"location":"api/#patching-permissions-to-namespaces","title":"Patching permissions to namespaces","text":"<p>This endpoint is named <code>namespace-grant-modify-permissions</code>.</p> <pre><code>curl -X PATCH http://localhost:8000/namespaces/1/objects/group/1/ -d '{\"has_update\": true}'\n</code></pre> <p>This removes all permissions except has_update from the group with id 1 to update objects within the namespace with id 1. Note that this is a patch, so you need to specify all permissions you want to keep.</p>"},{"location":"api/#listing-permissions-to-namespaces","title":"Listing permissions to namespaces","text":"<p>The name of this endpoint is <code>namespace-grant-list-permission</code>.</p> <pre><code>curl http://localhost:8000/namespaces/1/namespace/user/1/\n</code></pre> <p>This lists all permissions the user with id 1 has to the namespace with id 1. Note that this expands from groups, so if the user is a member of a group that has permissions to the namespace, this will be listed here.</p> <pre><code>curl http://localhost:8000/namespaces/1/objects/group/1/\n</code></pre> <p>List the given groups permissions to the objects within the namespace with id 1.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#add-the-app-to-your-project","title":"Add the app to your project","text":"<p><code>poetry add git+https://github.com/terjekv/django_namespaces.git#main</code></p>"},{"location":"installation/#add-the-app-to-your-settings","title":"Add the app to your settings","text":"<pre><code>INSTALLED_APPS = [\n    # ...\n    \"django_namespaces\",\n]\n</code></pre>"},{"location":"installation/#add-namespaces-to-models-you-want-to-be-namespaced","title":"Add namespaces to models you want to be namespaced","text":"<pre><code>from django_namespaces.models import AbstractNamespaceModel\n\nclass NamespacedExample(AbstractNamespaceModel):\n    ...\n</code></pre> <p>This adds a <code>namespace</code> field to your model, which is a foreign key to the <code>Namespace</code> model. This is the namespace that the object belongs to.</p> <p>Warning</p> <p>Deleting a namespace deletes all objects within the namespace. Once you have added a namespace to a model, you cannot remove it without deleting all objects within the namespace.</p>"},{"location":"installation/#add-namespace-mixin-to-your-views","title":"Add namespace mixin to your views","text":"<pre><code>from .models import NamespacedExample\n\n\nclass TestListViewDRF(NamespacePermissionMixin, ListCreateAPIView):\n\"\"\"A DRF list view.\"\"\"\n\n    queryset = NamespacedExample.objects.all()\n    ...\n\n\nclass TestDetailViewDRF(NamespacePermissionMixin, RetrieveUpdateDestroyAPIView): \n\"\"\"A DRF detail view.\"\"\"\n\n    queryset = NamespacedExample.objects.all()\n    ...\n</code></pre>"},{"location":"installation/#add-the-namespace-endpoints-to-your-project","title":"Add the namespace endpoints to your project","text":"<p>A set of endpoints are provided to work with namespaces. To use these endpoints, you need to add the following to your <code>urls.py</code>:</p> <pre><code>from django_namespaces import urls as django_namespaces_urls\n\nurlpatterns = [\n    # ...\n    path(\"namespaces/\", include(django_namespaces_urls)),\n]\n</code></pre>"}]}